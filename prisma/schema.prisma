// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Role {
  id Int @default(autoincrement()) @id
  name String
  code String @unique
  created_at DateTime? @default(now())
  updated_at DateTime? @updatedAt
  users User[]

  @@map("roles")
}

model User {
  id    Int     @default(autoincrement()) @id
  first_name String @db.VarChar(255)
  last_name String @db.VarChar(255)
  gender String? @db.VarChar(255)
  birth_date DateTime? @db.Date
  email String @unique @db.VarChar(255)
  password String @db.VarChar(255)
  email_verified_at String? @db.VarChar(255)
  role_code String @db.VarChar(255)
  is_google Boolean? @default(false)
  created_at DateTime? @default(now())
  updated_at DateTime? @updatedAt
  role Role @relation(fields: [role_code], references: [code])
  notes Notes[]

  @@map("users")
}

model Notes {
  id        Int     @default(autoincrement()) @id
  user_id Int 
  title String @db.VarChar(255)
  short_desc String? @db.VarChar(255) 
  content String? @db.Text
  user User @relation(fields: [user_id], references: [id])
  created_at DateTime? @default(now())
  updated_at DateTime? @updatedAt
  note_images NoteImages[]

  @@map("notes")
}

model NoteImages{
  id Int @default(autoincrement()) @id
  note_id Int
  path String @db.VarChar(255)
  size Int
  mime_type String @db.VarChar(255)
  created_at DateTime? @default(now())
  updated_at DateTime? @updatedAt
  note Notes? @relation(fields: [note_id], references: [id], onDelete: Cascade)

  @@map("note_images")
}
